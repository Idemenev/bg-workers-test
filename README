Есть веб-api, принимающее события для группы аккаунтов (для теста - 1000). События в большом объёме непрерывно (для теста ограничим поток в 10к событий).
Обработка события занимает 1с. Реализовать фоновую обработку (sleep + лог "результатов") событий с сохранением очерёдности для каждого аккаунта.
веб-апи эмулировать консольным скриптом, генерирующим события для обработки в фоне.
События генерировать случайными блоками, содержащими последовательноси по 1-5 для каждого аккаунта.

========================================================================================================================

Usage:
    - Start consumers. Todo: реализовать через supervisord
        php supervisord.php
    - Очистка лога воркеров, генерация данных (эмуляция запросов к веб-api)
        php producer-cli.php

Comments:

    Исхожу из того, что каждый id аккаунта известен.
    Для каждого аккаунта создается своя очередь по ID аккаунта.
    Каждое сообщение содержит пачку событий для указанного акаунта.
    Каждая очередь обслуживается одним эксклюзивным воркером с prefetch == 1.
    При ошибке обработки сообщения, пордок не нарушится:
        "Section 4.7 of the AMQP 0-9-1 core specification explains the conditions under which ordering is guaranteed:
        messages published in one channel, passing through one exchange and one queue and one outgoing channel will be received
        in the same order that they were sent. RabbitMQ offers stronger guarantees since release 2.7.0".
    1000 очередей для rabbitmq - не проблема.
    Решение горизонтально хорошо масштабируется.
    Либо kubernets, либо запуск и мониторинг через supervisord(не реализована, реализована заглушка supervisord.php).
    Можно подумать о реализации брокера воркеров, переключая их на разные очереди, с целью уменьшения кол-ва воркеров.
